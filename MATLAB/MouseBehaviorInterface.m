%% MouseBehaviorInterface: construct graphical user interface to interact with arduino
classdef MouseBehaviorInterface < handle
	properties
		Arduino
		Rsc
	end

	methods
		function obj = MouseBehaviorInterface()
			% Establish arduino connection
			obj.Arduino = ArduinoConnection;

			% Create the frame
			obj.Rsc.Figure = figure('Position',[100 100 400 200]);

			% Create a uitable for parameters
			obj.Rsc.TableParams = uitable...
			(...
				'Data', obj.Arduino.ParamValues',...
				'RowName', obj.Arduino.ParamNames,...
				'ColumnName', {'Value'},...
				'ColumnFormat', {'long'},...
				'ColumnEditable', [true],...
				'CellEditCallback', {@obj.OnParamChanged, obj.Arduino}...
			);

			% Set width and height
			obj.Rsc.TableParams.Position(3) = obj.Rsc.TableParams.Extent(3);
			obj.Rsc.TableParams.Position(4) = obj.Rsc.TableParams.Extent(4);

			% Start button - start experiment from IDLE
			ctrlPosBase = obj.Rsc.TableParams.Position;
			ctrlWidth = 50; % Width
			ctrlHeight = 20; % Height
			ctrlSpacing = 10; % Spacing between ui elements
			ctrlPos = ...
			[...
				ctrlPosBase(1) + ctrlPosBase(3) + ctrlSpacing,...
				ctrlPosBase(2) + ctrlPosBase(4) - ctrlHeight - ctrlSpacing,...
				ctrlWidth,...	
				ctrlHeight...
			];
			obj.Rsc.ButtonStart = uicontrol...
			(...
				'Style', 'pushbutton',...
				'String', 'Start',...
				'TooltipString', 'Tell Arduino to start the experiment.',...
				'Position', ctrlPos,...
				'Callback', {@MouseBehaviorInterface.ArduinoStart, obj.Arduino}...
			);

			% Stop button - abort current trial and return to IDLE
			ctrlPosBase = obj.Rsc.ButtonStart.Position;
			ctrlWidth = 50; % Width
			ctrlHeight = 20; % Height
			ctrlSpacing = 10; % Spacing between ui elements
			ctrlPos = ...
			[...
				ctrlPosBase(1),...
				ctrlPosBase(2) - ctrlHeight - ctrlSpacing,...
				ctrlWidth,...	
				ctrlHeight...
			];
			obj.Rsc.ButtonStop = uicontrol...
			(...
				'Style', 'pushbutton',...
				'String', 'Stop',...
				'TooltipString', 'Tell Arduino to stop the experiment. Restart using the "Start" button.',...
				'Position', ctrlPos,...
				'Callback', {@MouseBehaviorInterface.ArduinoStop, obj.Arduino}...
			);

			% Terminate button - terminate connection w/ arduino and close GUI
			ctrlPosBase = obj.Rsc.ButtonStop.Position;
			ctrlWidth = 50; % Width
			ctrlHeight = 20; % Height
			ctrlSpacing = 10; % Spacing between ui elements
			ctrlPos = ...
			[...
				ctrlPosBase(1),...
				ctrlPosBase(2) - ctrlHeight - ctrlSpacing,...
				ctrlWidth,...	
				ctrlHeight...
			];
			obj.Rsc.ButtonClose = uicontrol...
			(...
				'Style', 'pushbutton',...
				'String', 'Close',...
				'TooltipString', 'Terminate serial connection with Arduino and close the GUI.',...
				'Position', ctrlPos,...
				'Callback', {@MouseBehaviorInterface.ArduinoClose, obj.Arduino, obj.Rsc.Figure}...
			);
		end
	end

	methods (Static)
		function OnParamChanged(~, editData, arduino)
			paramId = editData.Indices(1);
			value = editData.NewData;
			
            % Add new parameter to update queue
            arduino.UpdateParams_AddToQueue(paramId, value)
            % Attempt to execute update queue, if current state does not allow param update, the queue will be executed when we enter an appropriate state
			arduino.UpdateParams_Execute()
		end
		function ArduinoStart(~, ~, arduino)
			arduino.Start()
            fprintf('Started.\n')
		end
		function ArduinoStop(~, ~, arduino)
			arduino.Stop()
            fprintf('Stopped.\n')
		end
		function ArduinoClose(~, ~, arduino, figureHandle)
			arduino.Close()
			close(figureHandle)
            fprintf('Connection closed.\n')
		end
	end
end